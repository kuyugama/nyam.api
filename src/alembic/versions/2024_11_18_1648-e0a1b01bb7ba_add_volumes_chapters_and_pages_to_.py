"""Add volumes, chapters and pages to compositions

Revision ID: e0a1b01bb7ba
Revises: 00f20e72f05f
Create Date: 2024-11-18 16:48:37.939163

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e0a1b01bb7ba"
down_revision: Union[str, None] = "4b858fb44c56"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "service_volumes",
        sa.Column("variant_id", sa.BIGINT(), nullable=True),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("chapters", sa.Integer(), nullable=False),
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["variant_id"], ["service_composition_variants.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_service_volumes_chapters"), "service_volumes", ["chapters"], unique=False
    )
    op.create_index(
        op.f("ix_service_volumes_created_at"), "service_volumes", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_service_volumes_id"), "service_volumes", ["id"], unique=False)
    op.create_index(op.f("ix_service_volumes_index"), "service_volumes", ["index"], unique=False)
    op.create_index(op.f("ix_service_volumes_title"), "service_volumes", ["title"], unique=False)
    op.create_index(
        op.f("ix_service_volumes_updated_at"), "service_volumes", ["updated_at"], unique=False
    )
    op.create_table(
        "service_chapters",
        sa.Column("volume_id", sa.BIGINT(), nullable=True),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("pages", sa.Integer(), nullable=False),
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["volume_id"], ["service_volumes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_service_chapters_created_at"), "service_chapters", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_service_chapters_id"), "service_chapters", ["id"], unique=False)
    op.create_index(op.f("ix_service_chapters_index"), "service_chapters", ["index"], unique=False)
    op.create_index(op.f("ix_service_chapters_pages"), "service_chapters", ["pages"], unique=False)
    op.create_index(op.f("ix_service_chapters_title"), "service_chapters", ["title"], unique=False)
    op.create_index(
        op.f("ix_service_chapters_updated_at"), "service_chapters", ["updated_at"], unique=False
    )
    op.create_table(
        "service_pages",
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("chapter_id", sa.BIGINT(), nullable=True),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("image_id", sa.BIGINT(), nullable=True),
        sa.Column("text", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["chapter_id"], ["service_chapters.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["image_id"],
            ["service_upload_images.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_service_pages_created_at"), "service_pages", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_service_pages_id"), "service_pages", ["id"], unique=False)
    op.create_index(op.f("ix_service_pages_index"), "service_pages", ["index"], unique=False)
    op.create_index(op.f("ix_service_pages_type"), "service_pages", ["type"], unique=False)
    op.create_index(
        op.f("ix_service_pages_updated_at"), "service_pages", ["updated_at"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_service_pages_updated_at"), table_name="service_pages")
    op.drop_index(op.f("ix_service_pages_type"), table_name="service_pages")
    op.drop_index(op.f("ix_service_pages_index"), table_name="service_pages")
    op.drop_index(op.f("ix_service_pages_id"), table_name="service_pages")
    op.drop_index(op.f("ix_service_pages_created_at"), table_name="service_pages")
    op.drop_table("service_pages")
    op.drop_index(op.f("ix_service_chapters_updated_at"), table_name="service_chapters")
    op.drop_index(op.f("ix_service_chapters_title"), table_name="service_chapters")
    op.drop_index(op.f("ix_service_chapters_pages"), table_name="service_chapters")
    op.drop_index(op.f("ix_service_chapters_index"), table_name="service_chapters")
    op.drop_index(op.f("ix_service_chapters_id"), table_name="service_chapters")
    op.drop_index(op.f("ix_service_chapters_created_at"), table_name="service_chapters")
    op.drop_table("service_chapters")
    op.drop_index(op.f("ix_service_volumes_updated_at"), table_name="service_volumes")
    op.drop_index(op.f("ix_service_volumes_title"), table_name="service_volumes")
    op.drop_index(op.f("ix_service_volumes_index"), table_name="service_volumes")
    op.drop_index(op.f("ix_service_volumes_id"), table_name="service_volumes")
    op.drop_index(op.f("ix_service_volumes_created_at"), table_name="service_volumes")
    op.drop_index(op.f("ix_service_volumes_chapters"), table_name="service_volumes")
    op.drop_table("service_volumes")
    # ### end Alembic commands ###
